#!/usr/bin/env node

/**
 * Script d'initialisation de la base de donn√©es FlowForge
 * Ex√©cute le sch√©ma d'authentification
 */

import fs from 'fs';
import path from 'path';
import pool from './src/db/pool.js';
import { config } from './src/config.js';

async function initDatabase() {
  console.log('üöÄ Initialisation de la base de donn√©es FlowForge...');
  
  try {
    // Lire le fichier de sch√©ma
    const schemaPath = path.join(process.cwd(), 'src/db/auth-schema.sql');
    const schema = fs.readFileSync(schemaPath, 'utf8');
    
    console.log('üìÑ Lecture du sch√©ma auth-schema.sql...');
    
    // Ex√©cuter le sch√©ma
    await pool.query(schema);
    
    console.log('‚úÖ Base de donn√©es initialis√©e avec succ√®s !');
    console.log('üìä Tables cr√©√©es:');
    console.log('   - users (utilisateurs approuv√©s)');
    console.log('   - access_requests (demandes d\'acc√®s)');
    console.log('   - user_sessions (sessions actives)');
    
    // V√©rifier les tables cr√©√©es
    const result = await pool.query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public' 
      AND table_name IN ('users', 'access_requests', 'user_sessions')
      ORDER BY table_name
    `);
    
    console.log('üìã Tables confirm√©es:', result.rows.map(row => row.table_name));
    
    // V√©rifier si l'admin existe
    const adminCheck = await pool.query('SELECT email, role FROM users WHERE role = $1', ['admin']);
    if (adminCheck.rows.length > 0) {
      console.log('üë§ Compte administrateur:', adminCheck.rows[0].email);
    }
    
  } catch (error) {
    console.error('‚ùå Erreur lors de l\'initialisation:', error.message);
    console.error('üí° Assurez-vous que:');
    console.error('   - DATABASE_URL est configur√©e');
    console.error('   - La base de donn√©es PostgreSQL est accessible');
    console.error('   - Les permissions sont correctes');
    process.exit(1);
  } finally {
    await pool.end();
  }
}

// Ex√©cuter si appel√© directement
if (import.meta.url === `file://${process.argv[1]}`) {
  initDatabase();
}

export { initDatabase };