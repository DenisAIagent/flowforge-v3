#!/usr/bin/env node

/**
 * Script manuel d'initialisation de la base de donn√©es
 * √Ä utiliser si le postbuild a √©chou√©
 */

import fs from 'fs';
import path from 'path';
import pool from './src/db/pool.js';

async function initDbManual() {
  console.log('üîß Initialisation manuelle de la base de donn√©es...');
  
  try {
    // Tester la connexion d'abord
    const testResult = await pool.query('SELECT NOW() as current_time');
    console.log('‚úÖ Connexion DB confirm√©e:', testResult.rows[0].current_time);
    
    // Lire et ex√©cuter le sch√©ma
    const schemaPath = path.join(process.cwd(), 'src/db/auth-schema.sql');
    console.log('üìÑ Lecture du sch√©ma:', schemaPath);
    
    const schema = fs.readFileSync(schemaPath, 'utf8');
    console.log('üìã Sch√©ma lu avec succ√®s (', schema.length, 'caract√®res)');
    
    // Ex√©cuter le sch√©ma
    console.log('üöÄ Ex√©cution du sch√©ma...');
    await pool.query(schema);
    
    console.log('‚úÖ Tables cr√©√©es avec succ√®s !');
    
    // V√©rifier les tables cr√©√©es
    const tables = await pool.query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public'
      ORDER BY table_name
    `);
    
    console.log('üìä Tables cr√©√©es:');
    tables.rows.forEach(row => {
      console.log('   -', row.table_name);
    });
    
    // V√©rifier la structure de la table users
    const usersCols = await pool.query(`
      SELECT column_name, data_type, is_nullable
      FROM information_schema.columns 
      WHERE table_name = 'users'
      ORDER BY ordinal_position
    `);
    
    if (usersCols.rows.length > 0) {
      console.log('üë• Structure table users:');
      usersCols.rows.forEach(col => {
        console.log(`   - ${col.column_name}: ${col.data_type} (${col.is_nullable === 'YES' ? 'nullable' : 'not null'})`);
      });
    }
    
    console.log('\nüéâ Base de donn√©es initialis√©e avec succ√®s !');
    console.log('Vous pouvez maintenant tester l\'enregistrement d\'utilisateurs.');
    
  } catch (error) {
    console.error('‚ùå Erreur initialisation manuelle:', error.message);
    console.error('Stack:', error.stack);
    process.exit(1);
  } finally {
    await pool.end();
  }
}

// Ex√©cuter l'initialisation
initDbManual();